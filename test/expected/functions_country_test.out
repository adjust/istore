BEGIN;
-- functions_country should find keys with exists;
-- ./spec/functions_country_spec.rb:8;
CREATE EXTENSION istore;
SELECT exist('de=>1'::country_istore, 'de');
 exist 
-------
 t
(1 row)

SELECT exist('de=>1'::country_istore, 'es');
 exist 
-------
 f
(1 row)

SELECT exist('de=>1, es=>0'::country_istore, 'uk');
 exist 
-------
 f
(1 row)

SELECT exist('de=>1, es=>0'::country_istore, 'es');
 exist 
-------
 t
(1 row)

ROLLBACK;
BEGIN;
-- functions_country should fetchvals;
-- ./spec/functions_country_spec.rb:15;
CREATE EXTENSION istore;
SELECT fetchval('de=>1'::country_istore, 'de');;
 fetchval 
----------
        1
(1 row)

SELECT fetchval('us=>1'::country_istore, 'uk');;
 fetchval 
----------
         
(1 row)

SELECT fetchval('de=>1, de=>1'::country_istore, 'uk');;
 fetchval 
----------
         
(1 row)

SELECT fetchval('de=>1, de=>1'::country_istore, 'de');;
 fetchval 
----------
        2
(1 row)

ROLLBACK;
BEGIN;
-- functions_country should add country_istores;
-- ./spec/functions_country_spec.rb:22;
CREATE EXTENSION istore;
SELECT add('de=>1, us=>1'::country_istore, 'de=>1, us=>1'::country_istore);;
         add          
----------------------
 "de"=>"2", "us"=>"2"
(1 row)

SELECT add('de=>1, us=>1'::country_istore, 'es=>1, us=>1'::country_istore);;
               add               
---------------------------------
 "de"=>"1", "es"=>"1", "us"=>"2"
(1 row)

SELECT add('de=>1, us=>1'::country_istore, 'es=>-1, us=>1'::country_istore);;
               add                
----------------------------------
 "de"=>"1", "es"=>"-1", "us"=>"2"
(1 row)

SELECT add('es=>1, us=>1'::country_istore, 'es=>-1, us=>1'::country_istore);;
         add          
----------------------
 "es"=>"0", "us"=>"2"
(1 row)

SELECT add('es=>-1, us=>1'::country_istore, 'es=>-1, us=>1'::country_istore);;
          add          
-----------------------
 "es"=>"-2", "us"=>"2"
(1 row)

SELECT add('es=>-1, us=>1'::country_istore, 1);;
         add          
----------------------
 "es"=>"0", "us"=>"2"
(1 row)

SELECT add('es=>-1, us=>1'::country_istore, -1);;
          add          
-----------------------
 "es"=>"-2", "us"=>"0"
(1 row)

SELECT add('es=>-1, us=>1'::country_istore, 0);;
          add          
-----------------------
 "es"=>"-1", "us"=>"1"
(1 row)

ROLLBACK;
BEGIN;
-- functions_country should substract country_istores;
-- ./spec/functions_country_spec.rb:41;
CREATE EXTENSION istore;
SELECT subtract('de=>1, us=>1'::country_istore, 'de=>1, us=>1'::country_istore);
       subtract       
----------------------
 "de"=>"0", "us"=>"0"
(1 row)

SELECT subtract('de=>1, us=>1'::country_istore, 'es=>1, us=>1'::country_istore);
             subtract             
----------------------------------
 "de"=>"1", "es"=>"-1", "us"=>"0"
(1 row)

SELECT subtract('de=>1, us=>1'::country_istore, 'es=>-1, us=>1'::country_istore);
            subtract             
---------------------------------
 "de"=>"1", "es"=>"1", "us"=>"0"
(1 row)

SELECT subtract('es=>1, us=>1'::country_istore, 'es=>-1, us=>1'::country_istore);
       subtract       
----------------------
 "es"=>"2", "us"=>"0"
(1 row)

SELECT subtract('es=>-1, us=>1'::country_istore, 'es=>-1, us=>1'::country_istore);
       subtract       
----------------------
 "es"=>"0", "us"=>"0"
(1 row)

SELECT subtract('es=>-1, us=>1'::country_istore, 1);
       subtract        
-----------------------
 "es"=>"-2", "us"=>"0"
(1 row)

SELECT subtract('es=>-1, us=>1'::country_istore, -1);
       subtract       
----------------------
 "es"=>"0", "us"=>"2"
(1 row)

SELECT subtract('es=>-1, us=>1'::country_istore, 0);
       subtract        
-----------------------
 "es"=>"-1", "us"=>"1"
(1 row)

ROLLBACK;
BEGIN;
-- functions_country should multiply country_istores;
-- ./spec/functions_country_spec.rb:60;
CREATE EXTENSION istore;
SELECT multiply('de=>1, us=>1'::country_istore, 'de=>1, us=>1'::country_istore);
       multiply       
----------------------
 "de"=>"1", "us"=>"1"
(1 row)

SELECT multiply('de=>1, us=>1'::country_istore, 'es=>1, us=>1'::country_istore);
             multiply              
-----------------------------------
 "de"=>NULL, "es"=>NULL, "us"=>"1"
(1 row)

SELECT multiply('de=>1, us=>1'::country_istore, 'es=>-1, us=>1'::country_istore);
             multiply              
-----------------------------------
 "de"=>NULL, "es"=>NULL, "us"=>"1"
(1 row)

SELECT multiply('es=>1, us=>1'::country_istore, 'es=>-1, us=>1'::country_istore);
       multiply        
-----------------------
 "es"=>"-1", "us"=>"1"
(1 row)

SELECT multiply('es=>-1, us=>1'::country_istore, 'es=>-1, us=>1'::country_istore);
       multiply       
----------------------
 "es"=>"1", "us"=>"1"
(1 row)

SELECT multiply('es=>-1, us=>1'::country_istore, 1);
       multiply        
-----------------------
 "es"=>"-1", "us"=>"1"
(1 row)

SELECT multiply('es=>-1, us=>1'::country_istore, -1);
       multiply        
-----------------------
 "es"=>"1", "us"=>"-1"
(1 row)

SELECT multiply('es=>-1, us=>1'::country_istore, 0);
       multiply       
----------------------
 "es"=>"0", "us"=>"0"
(1 row)

ROLLBACK;
BEGIN;
-- functions_country should divide country_istores;
-- ./spec/functions_country_spec.rb:79;
CREATE EXTENSION istore;
SELECT divide('de=>1, us=>1'::country_istore, 'de=>1, us=>1'::country_istore);
        divide        
----------------------
 "de"=>"1", "us"=>"1"
(1 row)

SELECT divide('de=>1, us=>1'::country_istore, 'es=>1, us=>1'::country_istore);
              divide               
-----------------------------------
 "de"=>NULL, "es"=>NULL, "us"=>"1"
(1 row)

SELECT divide('de=>1, us=>1'::country_istore, 'es=>-1, us=>1'::country_istore);
              divide               
-----------------------------------
 "de"=>NULL, "es"=>NULL, "us"=>"1"
(1 row)

SELECT divide('es=>1, us=>1'::country_istore, 'es=>-1, us=>1'::country_istore);
        divide         
-----------------------
 "es"=>"-1", "us"=>"1"
(1 row)

SELECT divide('es=>-1, us=>1'::country_istore, 'es=>-1, us=>1'::country_istore);
        divide        
----------------------
 "es"=>"1", "us"=>"1"
(1 row)

SELECT divide('es=>-1, us=>1'::country_istore, 1);
        divide         
-----------------------
 "es"=>"-1", "us"=>"1"
(1 row)

SELECT divide('es=>-1, us=>1'::country_istore, -1);
        divide         
-----------------------
 "es"=>"1", "us"=>"-1"
(1 row)

SELECT divide('es=>-1, us=>1'::country_istore, 0);
         divide         
------------------------
 "es"=>NULL, "us"=>NULL
(1 row)

SELECT divide('es=>-1, us=>1'::country_istore, 1::bigint);
        divide         
-----------------------
 "es"=>"-1", "us"=>"1"
(1 row)

SELECT divide('es=>-1, us=>1'::country_istore, -1::bigint);
        divide         
-----------------------
 "es"=>"1", "us"=>"-1"
(1 row)

SELECT divide('es=>-1, us=>1'::country_istore, 0::bigint);
         divide         
------------------------
 "es"=>NULL, "us"=>NULL
(1 row)

SELECT divide('es=>-8000000000, us=>8000000000'::country_istore, 4000000000);
        divide         
-----------------------
 "es"=>"-2", "us"=>"2"
(1 row)

ROLLBACK;
BEGIN;
-- functions_country should build a country_isotre_from array aka array_count;
-- ./spec/functions_country_spec.rb:106;
CREATE EXTENSION istore;
SELECT country_istore_from_array(ARRAY['de']);
 country_istore_from_array 
---------------------------
 "de"=>"1"
(1 row)

SELECT country_istore_from_array(ARRAY['de','de','de','de']);
 country_istore_from_array 
---------------------------
 "de"=>"4"
(1 row)

SELECT country_istore_from_array(NULL::text[]);
 country_istore_from_array 
---------------------------
 
(1 row)

SELECT country_istore_from_array(ARRAY['de','es','io','us']);
         country_istore_from_array          
--------------------------------------------
 "de"=>"1", "es"=>"1", "io"=>"1", "us"=>"1"
(1 row)

SELECT country_istore_from_array(ARRAY['de','es','io','us','de','es','io','us']);
         country_istore_from_array          
--------------------------------------------
 "de"=>"2", "es"=>"2", "io"=>"2", "us"=>"2"
(1 row)

SELECT country_istore_from_array(ARRAY['de','es','io','us','de','es','io','us',NULL]);
         country_istore_from_array          
--------------------------------------------
 "de"=>"2", "es"=>"2", "io"=>"2", "us"=>"2"
(1 row)

SELECT country_istore_from_array(ARRAY[NULL,'de','es','io','us','de','es','io','us']);
         country_istore_from_array          
--------------------------------------------
 "de"=>"2", "es"=>"2", "io"=>"2", "us"=>"2"
(1 row)

SELECT country_istore_from_array(ARRAY[NULL,'de','es','io','us','de','es','io','us',NULL]);
         country_istore_from_array          
--------------------------------------------
 "de"=>"2", "es"=>"2", "io"=>"2", "us"=>"2"
(1 row)

SELECT country_istore_from_array(ARRAY['de','es','io','us','de','es','io','us',NULL,'de',NULL,'de','es','io','us','de','es','io','us']);
         country_istore_from_array          
--------------------------------------------
 "de"=>"5", "es"=>"4", "io"=>"4", "us"=>"4"
(1 row)

SELECT country_istore_from_array(ARRAY['de'::country]);
 country_istore_from_array 
---------------------------
 "de"=>"1"
(1 row)

SELECT country_istore_from_array(ARRAY['de'::country,'de'::country,'de'::country,'de'::country]);
 country_istore_from_array 
---------------------------
 "de"=>"4"
(1 row)

SELECT country_istore_from_array(NULL::text[]);
 country_istore_from_array 
---------------------------
 
(1 row)

SELECT country_istore_from_array(ARRAY['de'::country,'es'::country,'io'::country,'us'::country]);
         country_istore_from_array          
--------------------------------------------
 "de"=>"1", "es"=>"1", "io"=>"1", "us"=>"1"
(1 row)

SELECT country_istore_from_array(ARRAY['de'::country,'es'::country,'io'::country,'us'::country,'de'::country,'es'::country,'io'::country,'us'::country]);
         country_istore_from_array          
--------------------------------------------
 "de"=>"2", "es"=>"2", "io"=>"2", "us"=>"2"
(1 row)

SELECT country_istore_from_array(ARRAY['de'::country,'es'::country,'io'::country,'us'::country,'de'::country,'es'::country,'io'::country,'us'::country,NULL]);
         country_istore_from_array          
--------------------------------------------
 "de"=>"2", "es"=>"2", "io"=>"2", "us"=>"2"
(1 row)

SELECT country_istore_from_array(ARRAY[NULL,'de'::country,'es'::country,'io'::country,'us'::country,'de'::country,'es'::country,'io'::country,'us'::country]);
         country_istore_from_array          
--------------------------------------------
 "de"=>"2", "es"=>"2", "io"=>"2", "us"=>"2"
(1 row)

SELECT country_istore_from_array(ARRAY[NULL,'de'::country,'es'::country,'io'::country,'us'::country,'de'::country,'es'::country,'io'::country,'us'::country,NULL]);
         country_istore_from_array          
--------------------------------------------
 "de"=>"2", "es"=>"2", "io"=>"2", "us"=>"2"
(1 row)

SELECT country_istore_from_array(ARRAY['de'::country,'es'::country,'io'::country,'us'::country,'de'::country,'es'::country,'io'::country,'us'::country,NULL,'de'::country,NULL,'de'::country,'es'::country,'io'::country,'us'::country,'de'::country,'es'::country,'io'::country,'us'::country]);
         country_istore_from_array          
--------------------------------------------
 "de"=>"5", "es"=>"4", "io"=>"4", "us"=>"4"
(1 row)

SELECT country_istore_from_array(ARRAY[NULL::country,NULL::country,NULL::country,NULL::country,NULL::country,NULL::country,NULL::country,NULL::country,NULL,NULL::country,NULL]);
 country_istore_from_array 
---------------------------
 
(1 row)

SELECT country_istore_from_array(ARRAY[]::country[]);
 country_istore_from_array 
---------------------------
 
(1 row)

ROLLBACK;
BEGIN;
-- functions_country should sum up an array of country_istores;
-- ./spec/functions_country_spec.rb:145;
CREATE EXTENSION istore;
SELECT country_istore_agg(ARRAY['de=>1']::country_istore[]);;
 country_istore_agg 
--------------------
 "de"=>"1"
(1 row)

SELECT country_istore_agg(ARRAY['de=>1','de=>1']::country_istore[]);;
 country_istore_agg 
--------------------
 "de"=>"2"
(1 row)

SELECT country_istore_agg(ARRAY['de=>1,us=>1','de=>1,us=>-1']::country_istore[]);;
  country_istore_agg  
----------------------
 "de"=>"2", "us"=>"0"
(1 row)

SELECT country_istore_agg(ARRAY['de=>1,us=>1','de=>1,us=>-1',NULL]::country_istore[]);;
  country_istore_agg  
----------------------
 "de"=>"2", "us"=>"0"
(1 row)

SELECT country_istore_agg(ARRAY[NULL,'de=>1,us=>1','de=>1,us=>-1']::country_istore[]);;
  country_istore_agg  
----------------------
 "de"=>"2", "us"=>"0"
(1 row)

SELECT country_istore_agg(ARRAY[NULL,'de=>1,us=>1','de=>1,us=>-1',NULL]::country_istore[]);;
  country_istore_agg  
----------------------
 "de"=>"2", "us"=>"0"
(1 row)

ROLLBACK;
BEGIN;
-- functions_country should sum up the total;
-- ./spec/functions_country_spec.rb:160;
CREATE EXTENSION istore;
SELECT country_istore_sum_up('de=>1'::country_istore);
 country_istore_sum_up 
-----------------------
                     1
(1 row)

SELECT country_istore_sum_up(NULL::country_istore);
 country_istore_sum_up 
-----------------------
                      
(1 row)

SELECT country_istore_sum_up('de=>1, us=>1'::country_istore);
 country_istore_sum_up 
-----------------------
                     2
(1 row)

SELECT country_istore_sum_up('de=>1 ,us=>-1, de=>1'::country_istore);
 country_istore_sum_up 
-----------------------
                     1
(1 row)

SELECT country_istore_sum_up('de=>3000000000 ,us=>4000000000, de=>3000000000'::country_istore);
 country_istore_sum_up 
-----------------------
           10000000000
(1 row)

ROLLBACK;
BEGIN;
-- functions_country should SUM istores;
-- ./spec/functions_country_spec.rb:168;
CREATE EXTENSION istore;
CREATE TABLE test (a country_istore);
INSERT INTO test VALUES ('de=>1'), ('us=>1'),('io=>1');
SELECT SUM(a) FROM test;
               sum               
---------------------------------
 "de"=>"1", "io"=>"1", "us"=>"1"
(1 row)

ROLLBACK;
BEGIN;
-- functions_country should SUM istores;
-- ./spec/functions_country_spec.rb:175;
CREATE EXTENSION istore;
CREATE TABLE test (a country_istore);
INSERT INTO test VALUES ('de=>1'), ('us=>1'), ('io=>1'), (NULL), ('io=>3');
SELECT SUM(a) FROM test;
               sum               
---------------------------------
 "de"=>"1", "io"=>"4", "us"=>"1"
(1 row)

ROLLBACK;
