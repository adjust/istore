BEGIN;
-- bigistore istore_io should persist istores;
-- ./spec/istore/istore_io_spec.rb:9;
CREATE EXTENSION istore;
CREATE TABLE istore_io AS SELECT '-2147483647 => 10, -10 => -9223372036854775807, 0 => 5, 10 => 9223372036854775806, 2147483647 => 10'::bigistore;
SELECT * FROM istore_io;
ROLLBACK;
BEGIN;
-- bigistore istore_io should persist istores;
-- ./spec/istore/istore_io_spec.rb:15;
CREATE EXTENSION istore;
CREATE TABLE istore_io AS SELECT '"-1"=>"+1","1"=>"2"'::bigistore;
SELECT * FROM istore_io;
ROLLBACK;
BEGIN;
-- bigistore istore_io should persist istores;
-- ./spec/istore/istore_io_spec.rb:21;
CREATE EXTENSION istore;
CREATE TABLE istore_io AS SELECT ' "-1"=>"+1","1"=>"2"'::bigistore;
SELECT * FROM istore_io;
ROLLBACK;
BEGIN;
-- bigistore istore_io should persist empty istores;
-- ./spec/istore/istore_io_spec.rb:27;
CREATE EXTENSION istore;
CREATE TABLE istore_io AS SELECT ''::bigistore;
SELECT * FROM istore_io;
ROLLBACK;
BEGIN;
-- bigistore istore_io should turn istore to json;
-- ./spec/istore/istore_io_spec.rb:32;
CREATE EXTENSION istore;
SELECT istore_to_json('-2147483647 => 10, -10 => -9223372036854775807, 0 => 5, 10 => 9223372036854775806, 2147483647 => 10'::bigistore);
ROLLBACK;
BEGIN;
-- bigistore istore_io invalid input should report invalid value input;
-- ./spec/istore/istore_io_spec.rb:38;
CREATE EXTENSION istore;
SELECT '2=>4, 1=>foo, 5=>17'::bigistore;
ROLLBACK;
BEGIN;
-- bigistore istore_io invalid input should report invalid value input;
-- ./spec/istore/istore_io_spec.rb:42;
CREATE EXTENSION istore;
SELECT '2=>4, 1=>5foo, 5=>17'::bigistore;
ROLLBACK;
BEGIN;
-- bigistore istore_io invalid input should report to big value input;
-- ./spec/istore/istore_io_spec.rb:46;
CREATE EXTENSION istore;
SELECT '2=>4, 1=>18446744073709551612, 5=>17'::bigistore;
ROLLBACK;
BEGIN;
-- bigistore istore_io invalid input should report to small value input;
-- ./spec/istore/istore_io_spec.rb:51;
CREATE EXTENSION istore;
SELECT '2=>4, 1=>-18446744073709551614, 5=>17'::bigistore;
ROLLBACK;
BEGIN;
-- bigistore istore_io invalid input should report invalid key input;
-- ./spec/istore/istore_io_spec.rb:56;
CREATE EXTENSION istore;
SELECT '2=>4, 54foo=>5, 5=>17'::bigistore;
ROLLBACK;
BEGIN;
-- bigistore istore_io invalid input should report invalid key input;
-- ./spec/istore/istore_io_spec.rb:60;
CREATE EXTENSION istore;
SELECT '2=>4, foo=>5, 5=>17'::bigistore;
ROLLBACK;
BEGIN;
-- bigistore istore_io invalid input should report to big key input;
-- ./spec/istore/istore_io_spec.rb:64;
CREATE EXTENSION istore;
SELECT '2=>4, 4000000000=>5, 5=>17'::bigistore;
ROLLBACK;
BEGIN;
-- bigistore istore_io invalid input should report to small key input;
-- ./spec/istore/istore_io_spec.rb:68;
CREATE EXTENSION istore;
SELECT '2=>4, -4000000000=>5, 5=>17'::bigistore;
ROLLBACK;
BEGIN;
-- bigistore istore_io invalid input should report invalid delimiter input;
-- ./spec/istore/istore_io_spec.rb:72;
CREATE EXTENSION istore;
SELECT '2=>4, 10=5, 5=>17'::bigistore;
ROLLBACK;
BEGIN;
-- bigistore istore_io invalid input should report unexpected end of line;
-- ./spec/istore/istore_io_spec.rb:76;
CREATE EXTENSION istore;
SELECT '1=>2,2='::bigistore;
ROLLBACK;
BEGIN;
-- bigistore istore_io array input should parse normal arrays tuple;
-- ./spec/istore/istore_io_spec.rb:82;
CREATE EXTENSION istore;
SELECT '([1,2], [11, 22])'::bigistore;
ROLLBACK;
BEGIN;
-- bigistore istore_io array input should parse uneven arrays tuple;
-- ./spec/istore/istore_io_spec.rb:86;
CREATE EXTENSION istore;
SELECT '([1,2,2], [11, 22])'::bigistore;
ROLLBACK;
BEGIN;
-- bigistore istore_io array input should parse uneven arrays tuple;
-- ./spec/istore/istore_io_spec.rb:90;
CREATE EXTENSION istore;
SELECT '([1,2], [11, 22, 33])'::bigistore;
ROLLBACK;
BEGIN;
-- bigistore istore_io array input should parse array tuple without comma;
-- ./spec/istore/istore_io_spec.rb:94;
CREATE EXTENSION istore;
SELECT '([1,2] [11, 22])'::bigistore;
ROLLBACK;
BEGIN;
-- bigistore istore_io array invalid input should report unexpected end of line;
-- ./spec/istore/istore_io_spec.rb:100;
CREATE EXTENSION istore;
SELECT '([1,2], ['::bigistore;
ROLLBACK;
BEGIN;
-- bigistore istore_io array invalid input should report expected comma in values;
-- ./spec/istore/istore_io_spec.rb:103;
CREATE EXTENSION istore;
SELECT '([1,2], [1'::bigistore;
ROLLBACK;
BEGIN;
-- bigistore istore_io array invalid input should report expected number;
-- ./spec/istore/istore_io_spec.rb:106;
CREATE EXTENSION istore;
SELECT '([1,2], [1,'::bigistore;
ROLLBACK;
BEGIN;
-- bigistore istore_io arrays row input should create bigistore from row;
-- ./spec/istore/istore_io_spec.rb:111;
CREATE EXTENSION istore;
SELECT row_to_bigistore((array[1,2], array[11, 22]));
ROLLBACK;
BEGIN;
-- bigistore istore_io arrays row input should fail on other kind of rows (case 1);
-- ./spec/istore/istore_io_spec.rb:115;
CREATE EXTENSION istore;
SELECT row_to_bigistore((array[1,2], array[11, 22], array[1,2]));
ROLLBACK;
BEGIN;
-- bigistore istore_io arrays row input should fail on other kind of rows (case 2);
-- ./spec/istore/istore_io_spec.rb:118;
CREATE EXTENSION istore;
SELECT row_to_bigistore((array[1,2], 'qwerty'));
ROLLBACK;
BEGIN;
-- bigistore istore_io arrays row input should fail on other kind of rows (case 3);
-- ./spec/istore/istore_io_spec.rb:121;
CREATE EXTENSION istore;
SELECT row_to_bigistore((array[1,2], array['1', '2']));
ROLLBACK;
BEGIN;
-- istore istore_io should persist istores;
-- ./spec/istore/istore_io_spec.rb:9;
CREATE EXTENSION istore;
CREATE TABLE istore_io AS SELECT '-2147483647 => 10, -10 => -2147483647, 0 => 5, 10 => 2147483647, 2147483647 => 10'::istore;
SELECT * FROM istore_io;
ROLLBACK;
BEGIN;
-- istore istore_io should persist istores;
-- ./spec/istore/istore_io_spec.rb:15;
CREATE EXTENSION istore;
CREATE TABLE istore_io AS SELECT '"-1"=>"+1","1"=>"2"'::istore;
SELECT * FROM istore_io;
ROLLBACK;
BEGIN;
-- istore istore_io should persist istores;
-- ./spec/istore/istore_io_spec.rb:21;
CREATE EXTENSION istore;
CREATE TABLE istore_io AS SELECT ' "-1"=>"+1","1"=>"2"'::istore;
SELECT * FROM istore_io;
ROLLBACK;
BEGIN;
-- istore istore_io should persist empty istores;
-- ./spec/istore/istore_io_spec.rb:27;
CREATE EXTENSION istore;
CREATE TABLE istore_io AS SELECT ''::istore;
SELECT * FROM istore_io;
ROLLBACK;
BEGIN;
-- istore istore_io should turn istore to json;
-- ./spec/istore/istore_io_spec.rb:32;
CREATE EXTENSION istore;
SELECT istore_to_json('-2147483647 => 10, -10 => -2147483647, 0 => 5, 10 => 2147483647, 2147483647 => 10'::istore);
ROLLBACK;
BEGIN;
-- istore istore_io invalid input should report invalid value input;
-- ./spec/istore/istore_io_spec.rb:38;
CREATE EXTENSION istore;
SELECT '2=>4, 1=>foo, 5=>17'::istore;
ROLLBACK;
BEGIN;
-- istore istore_io invalid input should report invalid value input;
-- ./spec/istore/istore_io_spec.rb:42;
CREATE EXTENSION istore;
SELECT '2=>4, 1=>5foo, 5=>17'::istore;
ROLLBACK;
BEGIN;
-- istore istore_io invalid input should report to big value input;
-- ./spec/istore/istore_io_spec.rb:46;
CREATE EXTENSION istore;
SELECT '2=>4, 1=>4294967294, 5=>17'::istore;
ROLLBACK;
BEGIN;
-- istore istore_io invalid input should report to small value input;
-- ./spec/istore/istore_io_spec.rb:51;
CREATE EXTENSION istore;
SELECT '2=>4, 1=>-4294967294, 5=>17'::istore;
ROLLBACK;
BEGIN;
-- istore istore_io invalid input should report invalid key input;
-- ./spec/istore/istore_io_spec.rb:56;
CREATE EXTENSION istore;
SELECT '2=>4, 54foo=>5, 5=>17'::istore;
ROLLBACK;
BEGIN;
-- istore istore_io invalid input should report invalid key input;
-- ./spec/istore/istore_io_spec.rb:60;
CREATE EXTENSION istore;
SELECT '2=>4, foo=>5, 5=>17'::istore;
ROLLBACK;
BEGIN;
-- istore istore_io invalid input should report to big key input;
-- ./spec/istore/istore_io_spec.rb:64;
CREATE EXTENSION istore;
SELECT '2=>4, 4000000000=>5, 5=>17'::istore;
ROLLBACK;
BEGIN;
-- istore istore_io invalid input should report to small key input;
-- ./spec/istore/istore_io_spec.rb:68;
CREATE EXTENSION istore;
SELECT '2=>4, -4000000000=>5, 5=>17'::istore;
ROLLBACK;
BEGIN;
-- istore istore_io invalid input should report invalid delimiter input;
-- ./spec/istore/istore_io_spec.rb:72;
CREATE EXTENSION istore;
SELECT '2=>4, 10=5, 5=>17'::istore;
ROLLBACK;
BEGIN;
-- istore istore_io invalid input should report unexpected end of line;
-- ./spec/istore/istore_io_spec.rb:76;
CREATE EXTENSION istore;
SELECT '1=>2,2='::istore;
ROLLBACK;
BEGIN;
-- istore istore_io array input should parse normal arrays tuple;
-- ./spec/istore/istore_io_spec.rb:82;
CREATE EXTENSION istore;
SELECT '([1,2], [11, 22])'::istore;
ROLLBACK;
BEGIN;
-- istore istore_io array input should parse uneven arrays tuple;
-- ./spec/istore/istore_io_spec.rb:86;
CREATE EXTENSION istore;
SELECT '([1,2,2], [11, 22])'::istore;
ROLLBACK;
BEGIN;
-- istore istore_io array input should parse uneven arrays tuple;
-- ./spec/istore/istore_io_spec.rb:90;
CREATE EXTENSION istore;
SELECT '([1,2], [11, 22, 33])'::istore;
ROLLBACK;
BEGIN;
-- istore istore_io array input should parse array tuple without comma;
-- ./spec/istore/istore_io_spec.rb:94;
CREATE EXTENSION istore;
SELECT '([1,2] [11, 22])'::istore;
ROLLBACK;
BEGIN;
-- istore istore_io array invalid input should report unexpected end of line;
-- ./spec/istore/istore_io_spec.rb:100;
CREATE EXTENSION istore;
SELECT '([1,2], ['::istore;
ROLLBACK;
BEGIN;
-- istore istore_io array invalid input should report expected comma in values;
-- ./spec/istore/istore_io_spec.rb:103;
CREATE EXTENSION istore;
SELECT '([1,2], [1'::istore;
ROLLBACK;
BEGIN;
-- istore istore_io array invalid input should report expected number;
-- ./spec/istore/istore_io_spec.rb:106;
CREATE EXTENSION istore;
SELECT '([1,2], [1,'::istore;
ROLLBACK;
BEGIN;
-- istore istore_io arrays row input should create istore from row;
-- ./spec/istore/istore_io_spec.rb:111;
CREATE EXTENSION istore;
SELECT row_to_istore((array[1,2], array[11, 22]));
ROLLBACK;
BEGIN;
-- istore istore_io arrays row input should fail on other kind of rows (case 1);
-- ./spec/istore/istore_io_spec.rb:115;
CREATE EXTENSION istore;
SELECT row_to_istore((array[1,2], array[11, 22], array[1,2]));
ROLLBACK;
BEGIN;
-- istore istore_io arrays row input should fail on other kind of rows (case 2);
-- ./spec/istore/istore_io_spec.rb:118;
CREATE EXTENSION istore;
SELECT row_to_istore((array[1,2], 'qwerty'));
ROLLBACK;
BEGIN;
-- istore istore_io arrays row input should fail on other kind of rows (case 3);
-- ./spec/istore/istore_io_spec.rb:121;
CREATE EXTENSION istore;
SELECT row_to_istore((array[1,2], array['1', '2']));
ROLLBACK;
