BEGIN;
-- functions_country should find keys with exists;
-- ./spec/functions_country_spec.rb:8;
CREATE EXTENSION istore;
SELECT exist('de=>1'::country_istore, 'de');
SELECT exist('de=>1'::country_istore, 'es');
SELECT exist('de=>1, es=>0'::country_istore, 'uk');
SELECT exist('de=>1, es=>0'::country_istore, 'es');
ROLLBACK;
BEGIN;
-- functions_country should fetchvals;
-- ./spec/functions_country_spec.rb:15;
CREATE EXTENSION istore;
SELECT fetchval('de=>1'::country_istore, 'de');;
SELECT fetchval('us=>1'::country_istore, 'uk');;
SELECT fetchval('de=>1, de=>1'::country_istore, 'uk');;
SELECT fetchval('de=>1, de=>1'::country_istore, 'de');;
ROLLBACK;
BEGIN;
-- functions_country should add country_istores;
-- ./spec/functions_country_spec.rb:22;
CREATE EXTENSION istore;
SELECT add('de=>1, us=>1'::country_istore, 'de=>1, us=>1'::country_istore);;
SELECT add('de=>1, us=>1'::country_istore, 'es=>1, us=>1'::country_istore);;
SELECT add('de=>1, us=>1'::country_istore, 'es=>-1, us=>1'::country_istore);;
SELECT add('es=>1, us=>1'::country_istore, 'es=>-1, us=>1'::country_istore);;
SELECT add('es=>-1, us=>1'::country_istore, 'es=>-1, us=>1'::country_istore);;
SELECT add('es=>-1, us=>1'::country_istore, 1);;
SELECT add('es=>-1, us=>1'::country_istore, -1);;
SELECT add('es=>-1, us=>1'::country_istore, 0);;
ROLLBACK;
BEGIN;
-- functions_country should substract country_istores;
-- ./spec/functions_country_spec.rb:41;
CREATE EXTENSION istore;
SELECT subtract('de=>1, us=>1'::country_istore, 'de=>1, us=>1'::country_istore);
SELECT subtract('de=>1, us=>1'::country_istore, 'es=>1, us=>1'::country_istore);
SELECT subtract('de=>1, us=>1'::country_istore, 'es=>-1, us=>1'::country_istore);
SELECT subtract('es=>1, us=>1'::country_istore, 'es=>-1, us=>1'::country_istore);
SELECT subtract('es=>-1, us=>1'::country_istore, 'es=>-1, us=>1'::country_istore);
SELECT subtract('es=>-1, us=>1'::country_istore, 1);
SELECT subtract('es=>-1, us=>1'::country_istore, -1);
SELECT subtract('es=>-1, us=>1'::country_istore, 0);
ROLLBACK;
BEGIN;
-- functions_country should multiply country_istores;
-- ./spec/functions_country_spec.rb:60;
CREATE EXTENSION istore;
SELECT multiply('de=>1, us=>1'::country_istore, 'de=>1, us=>1'::country_istore);
SELECT multiply('de=>1, us=>1'::country_istore, 'es=>1, us=>1'::country_istore);
SELECT multiply('de=>1, us=>1'::country_istore, 'es=>-1, us=>1'::country_istore);
SELECT multiply('es=>1, us=>1'::country_istore, 'es=>-1, us=>1'::country_istore);
SELECT multiply('es=>-1, us=>1'::country_istore, 'es=>-1, us=>1'::country_istore);
SELECT multiply('es=>-1, us=>1'::country_istore, 1);
SELECT multiply('es=>-1, us=>1'::country_istore, -1);
SELECT multiply('es=>-1, us=>1'::country_istore, 0);
ROLLBACK;
BEGIN;
-- functions_country should divide country_istores;
-- ./spec/functions_country_spec.rb:79;
CREATE EXTENSION istore;
SELECT divide('de=>1, us=>1'::country_istore, 'de=>1, us=>1'::country_istore);
SELECT divide('de=>1, us=>1'::country_istore, 'es=>1, us=>1'::country_istore);
SELECT divide('de=>1, us=>1'::country_istore, 'es=>-1, us=>1'::country_istore);
SELECT divide('es=>1, us=>1'::country_istore, 'es=>-1, us=>1'::country_istore);
SELECT divide('es=>-1, us=>1'::country_istore, 'es=>-1, us=>1'::country_istore);
SELECT divide('es=>-1, us=>1'::country_istore, 1);
SELECT divide('es=>-1, us=>1'::country_istore, -1);
SELECT divide('es=>-1, us=>1'::country_istore, 0);
SELECT divide('es=>-1, us=>1'::country_istore, 1::bigint);
SELECT divide('es=>-1, us=>1'::country_istore, -1::bigint);
SELECT divide('es=>-1, us=>1'::country_istore, 0::bigint);
SELECT divide('es=>-8000000000, us=>8000000000'::country_istore, 4000000000);
ROLLBACK;
BEGIN;
-- functions_country should build a country_isotre_from array aka array_count;
-- ./spec/functions_country_spec.rb:106;
CREATE EXTENSION istore;
SELECT country_istore_from_array(ARRAY['de']);
SELECT country_istore_from_array(ARRAY['de','de','de','de']);
SELECT country_istore_from_array(NULL::text[]);
SELECT country_istore_from_array(ARRAY['de','es','io','us']);
SELECT country_istore_from_array(ARRAY['de','es','io','us','de','es','io','us']);
SELECT country_istore_from_array(ARRAY['de','es','io','us','de','es','io','us',NULL]);
SELECT country_istore_from_array(ARRAY[NULL,'de','es','io','us','de','es','io','us']);
SELECT country_istore_from_array(ARRAY[NULL,'de','es','io','us','de','es','io','us',NULL]);
SELECT country_istore_from_array(ARRAY['de','es','io','us','de','es','io','us',NULL,'de',NULL,'de','es','io','us','de','es','io','us']);
SELECT country_istore_from_array(ARRAY['de'::country]);
SELECT country_istore_from_array(ARRAY['de'::country,'de'::country,'de'::country,'de'::country]);
SELECT country_istore_from_array(NULL::text[]);
SELECT country_istore_from_array(ARRAY['de'::country,'es'::country,'io'::country,'us'::country]);
SELECT country_istore_from_array(ARRAY['de'::country,'es'::country,'io'::country,'us'::country,'de'::country,'es'::country,'io'::country,'us'::country]);
SELECT country_istore_from_array(ARRAY['de'::country,'es'::country,'io'::country,'us'::country,'de'::country,'es'::country,'io'::country,'us'::country,NULL]);
SELECT country_istore_from_array(ARRAY[NULL,'de'::country,'es'::country,'io'::country,'us'::country,'de'::country,'es'::country,'io'::country,'us'::country]);
SELECT country_istore_from_array(ARRAY[NULL,'de'::country,'es'::country,'io'::country,'us'::country,'de'::country,'es'::country,'io'::country,'us'::country,NULL]);
SELECT country_istore_from_array(ARRAY['de'::country,'es'::country,'io'::country,'us'::country,'de'::country,'es'::country,'io'::country,'us'::country,NULL,'de'::country,NULL,'de'::country,'es'::country,'io'::country,'us'::country,'de'::country,'es'::country,'io'::country,'us'::country]);
SELECT country_istore_from_array(ARRAY[NULL::country,NULL::country,NULL::country,NULL::country,NULL::country,NULL::country,NULL::country,NULL::country,NULL,NULL::country,NULL]);
SELECT country_istore_from_array(ARRAY[]::country[]);
ROLLBACK;
BEGIN;
-- functions_country should sum up an array of country_istores;
-- ./spec/functions_country_spec.rb:145;
CREATE EXTENSION istore;
SELECT country_istore_agg(ARRAY['de=>1']::country_istore[]);;
SELECT country_istore_agg(ARRAY['de=>1','de=>1']::country_istore[]);;
SELECT country_istore_agg(ARRAY['de=>1,us=>1','de=>1,us=>-1']::country_istore[]);;
SELECT country_istore_agg(ARRAY['de=>1,us=>1','de=>1,us=>-1',NULL]::country_istore[]);;
SELECT country_istore_agg(ARRAY[NULL,'de=>1,us=>1','de=>1,us=>-1']::country_istore[]);;
SELECT country_istore_agg(ARRAY[NULL,'de=>1,us=>1','de=>1,us=>-1',NULL]::country_istore[]);;
ROLLBACK;
BEGIN;
-- functions_country should sum up the total;
-- ./spec/functions_country_spec.rb:160;
CREATE EXTENSION istore;
SELECT country_istore_sum_up('de=>1'::country_istore);
SELECT country_istore_sum_up(NULL::country_istore);
SELECT country_istore_sum_up('de=>1, us=>1'::country_istore);
SELECT country_istore_sum_up('de=>1 ,us=>-1, de=>1'::country_istore);
SELECT country_istore_sum_up('de=>3000000000 ,us=>4000000000, de=>3000000000'::country_istore);
ROLLBACK;
BEGIN;
-- functions_country should SUM istores;
-- ./spec/functions_country_spec.rb:168;
CREATE EXTENSION istore;
CREATE TABLE test (a country_istore);
INSERT INTO test VALUES ('de=>1'), ('us=>1'),('io=>1');
SELECT SUM(a) FROM test;
ROLLBACK;
BEGIN;
-- functions_country should SUM istores;
-- ./spec/functions_country_spec.rb:175;
CREATE EXTENSION istore;
CREATE TABLE test (a country_istore);
INSERT INTO test VALUES ('de=>1'), ('us=>1'), ('io=>1'), (NULL), ('io=>3');
SELECT SUM(a) FROM test;
ROLLBACK;
